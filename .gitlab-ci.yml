stages:
  - publish
  - deploy-test
  - deploy-prod

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

publish:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  script:
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST

deploy-test:
  image: alpine:latest
  stage: deploy-test
  tags:
    - deployment-test
  script:
    - chmod og= $ID_RSA_TEST
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA_TEST -o StrictHostKeyChecking=no $TEST_SERVER_USER@$TEST_SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA_TEST -o StrictHostKeyChecking=no $TEST_SERVER_USER@$TEST_SERVER_IP "docker pull $TAG_COMMIT"
    - ssh -i $ID_RSA_TEST -o StrictHostKeyChecking=no $TEST_SERVER_USER@$TEST_SERVER_IP "docker container rm -f my-app || true"
    - ssh -i $ID_RSA_TEST -o StrictHostKeyChecking=no $TEST_SERVER_USER@$TEST_SERVER_IP "docker run -d -p 80:80 --name my-app $TAG_COMMIT"
  environment:
    name: test
    url: http://$TEST_SERVER_IP
  only:
    - test-env

deploy-prod:
  image: alpine:latest
  stage: deploy-prod
  tags:
    - deployment-prod
  script:
    - chmod og= $ID_RSA_PROD
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA_PROD -o StrictHostKeyChecking=no $PROD_SERVER_USER@$PROD_SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA_PROD -o StrictHostKeyChecking=no $PROD_SERVER_USER@$PROD_SERVER_IP "docker pull $TAG_COMMIT"
    - ssh -i $ID_RSA_PROD -o StrictHostKeyChecking=no $PROD_SERVER_USER@$PROD_SERVER_IP "docker container rm -f my-app || true"
    - ssh -i $ID_RSA_PROD -o StrictHostKeyChecking=no $PROD_SERVER_USER@$PROD_SERVER_IP "docker run -d -p 80:80 --name my-app $TAG_COMMIT"
  environment:
    name: prod
    url: http://$PROD_SERVER_IP
  only:
    - prod-env